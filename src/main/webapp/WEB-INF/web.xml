<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:jsp="http://java.sun.com/xml/ns/javaee/jsp"
	xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring-context.xml</param-value>
	</context-param>

	<!-- 第一个encoding，这5个过滤器顺序不能搞错 -->
	<!-- 文件上传中文乱码添加此过滤器 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- {{ .Env.CustEnable1 }} -->
	<!--集群配置 <filter> <display-name>ClusteredSessionFilter</display-name> <filter-name>ClusteredSessionFilter</filter-name> 
		<filter-class>com.epoint.core.utils.clustered.ClusteredSessionFilter</filter-class> 
		<async-supported>true</async-supported> <init-param> <param-name>maxInactiveInterval</param-name> 
		<param-value>1800</param-value> </init-param> </filter> <filter-mapping> 
		<filter-name>ClusteredSessionFilter</filter-name> <url-pattern>/*</url-pattern> 
		</filter-mapping> -->

	<!-- {{ .Env.CustEnable2 }} -->
	<!--跨域过滤器配置 <filter> <filter-name>CORS</filter-name> <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class> 
		<async-supported>true</async-supported> <init-param> <param-name>cors.allowOrigin</param-name> 
		<param-value>http://localhost</param-value> </init-param> <init-param> <param-name>cors.supportedMethods</param-name> 
		<param-value>GET, POST</param-value> </init-param> <init-param> <param-name>cors.supportedHeaders</param-name> 
		<param-value>Accept, Origin, X-Requested-With, Content-Type, Last-Modified, 
		Authorization</param-value> </init-param> <init-param> <param-name>cors.exposedHeaders</param-name> 
		<param-value>Set-Cookie</param-value> </init-param> <init-param> <param-name>cors.supportsCredentials</param-name> 
		<param-value>true</param-value> </init-param> </filter> <filter-mapping> 
		<filter-name>CORS</filter-name> <url-pattern>/*</url-pattern> </filter-mapping> -->

	<!-- Druid(框架的数据库连接池实现方案),监控数据库,以及WEB访问连接信息 ,需要性能监控排查的时候可以打开 -->
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<async-supported>true</async-supported>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.jsp,/druid/*,/download/*</param-value>
		</init-param>
		<init-param>
			<param-name>sessionStatMaxCount</param-name>
			<param-value>20000</param-value>
		</init-param>
		<init-param>
			<param-name>sessionStatEnable</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>principalSessionName</param-name>
			<param-value>session_user_key</param-value>
		</init-param>
		<init-param>
			<param-name>profileEnable</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
		<init-param>
			<param-name>resetEnable</param-name>
			<param-value>true</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>PermissionFilter</filter-name>
		<filter-class>com.epoint.accesscontrol.server.PermissionFilter</filter-class>
	</filter>
    <filter-mapping>
  		<filter-name>PermissionFilter</filter-name>
  		<url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
  		<filter-name>PermissionFilter</filter-name>
  		<url-pattern>*.html</url-pattern>
    </filter-mapping>
    <filter-mapping>
  		<filter-name>PermissionFilter</filter-name>
  		<url-pattern>*.htm</url-pattern>
    </filter-mapping>
    <filter-mapping>
  		<filter-name>PermissionFilter</filter-name>
  		<url-pattern>*.action</url-pattern>
    </filter-mapping>
<!-- 	<filter-mapping> -->
<!-- 		<dispatcher>REQUEST</dispatcher> -->
<!-- 		<dispatcher>FORWARD</dispatcher> -->
<!-- 		<dispatcher>ERROR</dispatcher> -->
<!-- 		<dispatcher>INCLUDE</dispatcher> -->
<!-- 	</filter-mapping> -->

	<servlet>
		<servlet-name>accessControlServlet</servlet-name>
		<servlet-class>com.epoint.accesscontrol.server.AccessControlService</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>accessControlServlet</servlet-name>
		<url-pattern>/index.do</url-pattern>
	</servlet-mapping>

<!-- 大数据广播配置 -->
	<servlet>
		<description>AtmosphereServletZtbbi</description>
		<servlet-name>AtmosphereServletZtbbi</servlet-name>
		<servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
		<init-param>
			<param-name>org.atmosphere.cpr.packages</param-name>
			<param-value>com.epoint.websocket.control</param-value>
		</init-param>
		<init-param>
			<param-name>org.atmosphere.interceptor.HeartbeatInterceptor.clientHeartbeatFrequencyInSeconds</param-name>
			<param-value>30</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
		<async-supported>true</async-supported>
	</servlet>
	<servlet-mapping>
		<servlet-name>AtmosphereServletZtbbi</servlet-name>
		<url-pattern>/websocket/ztbbi/*</url-pattern>
	</servlet-mapping>


	<servlet>
		<servlet-name>msgOperateServlet</servlet-name>
		<servlet-class>com.epoint.msg.operate.MsgOperate</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>msgOperateServlet</servlet-name>
		<url-pattern>/msgOperate</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>ledMoudleServlet</servlet-name>
		<servlet-class>com.epoint.accesscontrol.server.LedMoudleDataAction</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ledMoudleServlet</servlet-name>
		<url-pattern>/ledMoudle</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>publicresourceServlet</servlet-name>
		<servlet-class>com.epoint.accesscontrol.server.PublicresourceAction</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>publicresourceServlet</servlet-name>
		<url-pattern>/publicresource</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>BigScreenControlAction</servlet-name>
		<servlet-class>com.epoint.websocket.control.BigScreenControlAction</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>BigScreenControlAction</servlet-name>
		<url-pattern>/screencontroller</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>frontLedServlet</servlet-name>
		<servlet-class>com.epoint.accesscontrol.server.FrontLed</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>frontLedServlet</servlet-name>
		<url-pattern>/frontLed</url-pattern>
	</servlet-mapping>

</web-app>